<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.nbst.dao.mapper.imesweb.TypeLevelTwoMapper">
	<resultMap id="BaseResultMap"
		type="com.nbst.model.TypeLevelTwo">
		<id column="CCLXTWO_ID" property="cclxtwoId" jdbcType="INTEGER" />
		<result column="CCLXTWO_NAME" property="cclxtwoName"
			jdbcType="VARCHAR" />
		<result column="CCLXTWO_EXTEND1" property="cclxtwoExtend1"
			jdbcType="VARCHAR" />
		<result column="CCLXTWO_EXTEND2" property="cclxtwoExtend2"
			jdbcType="VARCHAR" />
		<result column="CCLXTWO_EXTEND3" property="cclxtwoExtend3"
			jdbcType="VARCHAR" />
		<result column="CCLXTWO_EXTEND4" property="cclxtwoExtend4"
			jdbcType="VARCHAR" />
		<result column="CCLXTWO_EXTEND5" property="cclxtwoExtend5"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		CCLXTWO_ID, CCLXTWO_NAME, CCLXTWO_EXTEND1, CCLXTWO_EXTEND2,
		CCLXTWO_EXTEND3,
		CCLXTWO_EXTEND4,
		CCLXTWO_EXTEND5
	</sql>
	<select id="findById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from type_level_two
		where CCLXTWO_ID = #{cclxtwoId,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="java.lang.Integer">
		delete from type_level_two
		where CCLXTWO_ID = #{cclxtwoId,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.nbst.model.TypeLevelTwo"
		useGeneratedKeys="true" keyProperty="cclxtwoId">
		insert into type_level_two
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="cclxtwoId != null">
				CCLXTWO_ID,
			</if>
			<if test="cclxtwoName != null">
				CCLXTWO_NAME,
			</if>
			<if test="cclxtwoExtend1 != null">
				CCLXTWO_EXTEND1,
			</if>
			<if test="cclxtwoExtend2 != null">
				CCLXTWO_EXTEND2,
			</if>
			<if test="cclxtwoExtend3 != null">
				CCLXTWO_EXTEND3,
			</if>
			<if test="cclxtwoExtend4 != null">
				CCLXTWO_EXTEND4,
			</if>
			<if test="cclxtwoExtend5 != null">
				CCLXTWO_EXTEND5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="cclxtwoId != null">
				#{cclxtwoId,jdbcType=INTEGER},
			</if>
			<if test="cclxtwoName != null">
				#{cclxtwoName,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend1 != null">
				#{cclxtwoExtend1,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend2 != null">
				#{cclxtwoExtend2,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend3 != null">
				#{cclxtwoExtend3,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend4 != null">
				#{cclxtwoExtend4,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend5 != null">
				#{cclxtwoExtend5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="com.nbst.model.TypeLevelTwo">
		update type_level_two
		<set>
			<if test="cclxtwoName != null">
				CCLXTWO_NAME = #{cclxtwoName,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend1 != null">
				CCLXTWO_EXTEND1 = #{cclxtwoExtend1,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend2 != null">
				CCLXTWO_EXTEND2 = #{cclxtwoExtend2,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend3 != null">
				CCLXTWO_EXTEND3 = #{cclxtwoExtend3,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend4 != null">
				CCLXTWO_EXTEND4 = #{cclxtwoExtend4,jdbcType=VARCHAR},
			</if>
			<if test="cclxtwoExtend5 != null">
				CCLXTWO_EXTEND5 = #{cclxtwoExtend5,jdbcType=VARCHAR},
			</if>
		</set>
		where CCLXTWO_ID = #{cclxtwoId,jdbcType=INTEGER}
	</update>
	<select id="findByCondition" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from type_level_two
		where 1=1
		<if test="cclxtwoName != null">
			and CCLXTWO_NAME = #{cclxtwoName,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend1 != null">
			and CCLXTWO_EXTEND1 = #{cclxtwoExtend1,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend2 != null">
			and CCLXTWO_EXTEND2 = #{cclxtwoExtend2,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend3 != null">
			and CCLXTWO_EXTEND3 = #{cclxtwoExtend3,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend4 != null">
			and CCLXTWO_EXTEND4 = #{cclxtwoExtend4,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend5 != null">
			and CCLXTWO_EXTEND5 = #{cclxtwoExtend5,jdbcType=VARCHAR}
		</if>
		<if test="limit!=null and offset!=null">
			limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>
	<select id="count" resultType="java.lang.Integer"
		parameterType="Map">
		select count(*) from type_level_two
		where 1=1
		<if test="cclxtwoName != null">
			and CCLXTWO_NAME = #{cclxtwoName,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend1 != null">
			and CCLXTWO_EXTEND1 = #{cclxtwoExtend1,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend2 != null">
			and CCLXTWO_EXTEND2 = #{cclxtwoExtend2,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend3 != null">
			and CCLXTWO_EXTEND3 = #{cclxtwoExtend3,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend4 != null">
			and CCLXTWO_EXTEND4 = #{cclxtwoExtend4,jdbcType=VARCHAR}
		</if>
		<if test="cclxtwoExtend5 != null">
			and CCLXTWO_EXTEND5 = #{cclxtwoExtend5,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="findTypeLevelName" resultType="java.lang.String">
		select
			CCLXTWO_NAME ccName
		from type_level_two
		where CCLXTWO_EXTEND2 = 1
	</select>
</mapper>